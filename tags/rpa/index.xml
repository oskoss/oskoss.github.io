<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>RPA on Peter Blum</title>
    <link>https://oskoss.com/tags/rpa/</link>
    <description>Recent content in RPA on Peter Blum</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 23 Nov 2019 09:00:00 +0000</lastBuildDate>
    <atom:link href="https://oskoss.com/tags/rpa/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>uipath ノート（三）- uipath orchestrator</title>
      <link>https://oskoss.com/posts/2019-11-23-uipath-orchestrator/</link>
      <pubDate>Sat, 23 Nov 2019 09:00:00 +0000</pubDate>
      <guid>https://oskoss.com/posts/2019-11-23-uipath-orchestrator/</guid>
      <description>利用手順 Official doc: https://docs.uipath.com/robot/docs/from-orchestrator-and-the-orchestrator-settings-window&#xA;マシンを追加 マシン側でマシン名とユーザ名を確認&#xA;C:\Users\user&amp;gt;hostname DESKTOP-ABCDE5F C:\Users\user&amp;gt;whoami desktop-abcde5f\user C:\Users\user&amp;gt; 追加完了後、マシンキーを取得する。&#xA;ロボットを登録 Type: studio (開発用？) Domain/Username: 上記のユーザ名 ローカルのorchestrator設定 Uipath Robotを開き⇒orchestratorの設定で、上記のマシンキーを入力する。 orchestrator URLに https://platform.uipath.com/ を入力する. Invalid machine keyというエラーが出たら、下記のようなURLを試す：&#xA;https://platform.uipath.com/&amp;lt;account name&amp;gt;/&amp;lt;service name&amp;gt; 参照：Uipath orchestrator error : invalid machine key&#xA;ロボットグループ(Environment)作成 プロジェクトをパブリッシュ(Publish) プロセスを追加 Automations　⇒　Processes&#xA;ジョブ(Jobs)の実行 Monitoring　⇒　Jobs&#xA;その他 再パブリッシュすると、Processが最新バージョンを使うため、変更作業が必要 Processes　⇒　More Options　⇒　View Process　⇒　最新のバージョンに切り替える&#xA;ジョブの停止 停止(Stop)：必ずワークフロー内で「停止すべきか確認(Should Stop)」アクティビティを使用する 強制終了(Kill)：処理中の内容に関わらず、ジョブを停止する アクティブなジョブは削除できない パラメーター変更の優先順位 ジョブ (Jobs) -&amp;gt; プロセス (Processes) -&amp;gt; パッケージ(UiPath Studio)</description>
    </item>
    <item>
      <title>uipath ノート（二）- Best Practice</title>
      <link>https://oskoss.com/posts/2019-11-18-uipath-best-practice/</link>
      <pubDate>Mon, 18 Nov 2019 09:00:00 +0000</pubDate>
      <guid>https://oskoss.com/posts/2019-11-18-uipath-best-practice/</guid>
      <description>時間をかけて各ワークフローに適したレイアウトを選択しましょう。 メイン: フローチャートまたはステートマシン&#xA;ビジネスロジック: フローチャート&#xA;UI インタラクション: シーケンス&#xA;フローチャートを使用することで、入れ子状の IF を回避&#xA;プロセスを小さなワークフローに分割しましょう。 分割したものを個別に開発、テスト&#xA;ワークフローの再利用&#xA;分割ファイルで作業することによる、より効率的な共同作業&#xA;必ず例外を処理しましょう。 例外が発生しやすいワークフローを [Try Catch (トライキャッチ)] ブロックに配置&#xA;外部から呼び出されたワークフローでも同様&#xA;リカバリシーケンスの設定&#xA;ワークフローを読みやすいものにしましょう。 すべてのコンポーネントにわかりやすい名前を選択&#xA;注記やコメントの使用&#xA;リアルタイムの実行状況のログ取得&#xA;環境設定を Config ファイルに格納&#xA;不要になったアプリケーションを終了させることで、常にクリーンな状態を維持しましょう。 </description>
    </item>
    <item>
      <title>uipath ノート（一）</title>
      <link>https://oskoss.com/posts/2019-10-27-uipath/</link>
      <pubDate>Sun, 27 Oct 2019 09:00:00 +0000</pubDate>
      <guid>https://oskoss.com/posts/2019-10-27-uipath/</guid>
      <description>変数 Int32 String Boolean GenericValue　参照 UiPath Studio には GenericValue 変数の自動変換メカニズムがあり、式を正しく定義することで、目的の結果を得ることができます。式の最初の要素は、Studio から操作するガイドラインとして使用されることを考慮してください。例えば、2 つの GenericValue 変数を追加し、式の最初の変数が String として定義されてた場合、最初に代入された値を元に 2 つの値を結合し、文字列となります。 Integer として定義した場合の結果は、合計の値となります。&#xA;Array DataTime DataTable .Net 変数型を参照して探す方法&#xA;アクティビティ レイアウトダイアグラム シーエンス：　より高度で複雑な自動化に向こう フローチャート：　シンプルな自動化プロジェクトに適している ステートマシン Global Exception Handler (グローバル例外ハンドラー) 参照：https://docs.uipath.com/studio/lang-ja/docs/workflow-design&#xA;選択肢 条件分岐(If)：　シーケンス用条件分岐 フロー条件分岐(flow desicion)：　フローチャート用条件分岐 フロースイッチ (Flow Switch) 繰り返し 繰り返し（前判定）(While) 繰り返し（後判定）(Do While) 繰り返し（コレクションの各要素）(For Each) データ操作 CSVを読み込み(Read CSV) オプションにエンコーディングを指定できる（日本語データがある場合、&amp;quot;SHIFT-JIS&amp;quot;を指定する） 列名を含める(IncludeColumnNames)を指定できる 出力タイプ：System.Data.DataTable Microsoft Docs Selectメソッドで半角スペースを含む列名で指定する場合、半角スペースが特殊文字ではなく文字列として認識されるため、[]で列名を囲う Names.Select(&amp;#34;[メンバー ステータス] = &amp;#39;Yes&amp;#39;&amp;#34;) その他 メッセージボックス 代入(assign) 待機 (Delay) 入力ダイアログ（input dialog）: フォルダーを選択(Select Folder) 一行を書き込み(Write Line)：　Debug用？ アプリケーションを開く(Open Application) ブラウザを開く(Open Browser) ブラウザーにアタッチ(Attach Browser) 文字を入力(Type Into) ハイライト(Highlight) アンカーベース(Anchor Base) スクリーンショットをと撮る(Take Screenshot) 要素の有無を検出(Element Exists) 要素の消滅を待つ(Wait Element Vanish) レコーディング機能 [○]レコーディング可</description>
    </item>
  </channel>
</rss>
